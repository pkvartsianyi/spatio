name: Python Package

on:
  push:
    branches: [main]
    paths:
      - "py-spatio/**"
      - "src/**"
      - "Cargo.toml"
  pull_request:
    branches: [main]
    paths:
      - "py-spatio/**"
      - "src/**"
      - "Cargo.toml"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Python Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Skip some combinations to reduce CI load
          - os: windows-latest
            python-version: "3.8"
          - os: windows-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.8"
          - os: macos-latest
            python-version: "3.9"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            py-spatio/target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('py-spatio/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install Python dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install maturin
          pip install -r requirements-dev.txt

      - name: Build package
        working-directory: py-spatio
        run: maturin develop

      - name: Run linting
        working-directory: py-spatio
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        run: |
          ruff check src/ tests/ examples/
          mypy src/

      - name: Run tests
        working-directory: py-spatio
        run: pytest -v

      - name: Run examples
        working-directory: py-spatio
        run: |
          python examples/basic_usage.py
          python examples/trajectory_tracking.py
          python examples/performance_demo.py

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            py-spatio/target
            ~/.cache/pip
          key: coverage-${{ hashFiles('**/Cargo.lock', 'py-spatio/requirements-dev.txt') }}

      - name: Install dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install maturin
          pip install -r requirements-dev.txt

      - name: Build package
        working-directory: py-spatio
        run: maturin develop

      - name: Run tests with coverage
        working-directory: py-spatio
        run: pytest --cov=spatio --cov-report=xml --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: py-spatio/coverage.xml
          flags: python
          name: python-coverage

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            py-spatio/target
            ~/.cache/pip
          key: benchmark-${{ hashFiles('**/Cargo.lock', 'py-spatio/requirements-dev.txt') }}

      - name: Install dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install maturin
          pip install -r requirements-dev.txt

      - name: Build release package
        working-directory: py-spatio
        run: maturin develop --release

      - name: Run benchmarks
        working-directory: py-spatio
        run: pytest --benchmark-only --benchmark-json=benchmark-results.json

      - name: Store benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: py-spatio/benchmark-results.json

  build-wheels:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels
        working-directory: py-spatio
        run: maturin build --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: py-spatio/dist/*.whl

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            py-spatio/target
            ~/.cache/pip
          key: typecheck-${{ hashFiles('**/Cargo.lock', 'py-spatio/requirements-dev.txt') }}

      - name: Install dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install maturin
          pip install -r requirements-dev.txt

      - name: Build package
        working-directory: py-spatio
        run: maturin develop

      - name: Run type checking
        working-directory: py-spatio
        run: mypy src/

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run security checks
        working-directory: py-spatio
        run: |
          bandit -r src/
