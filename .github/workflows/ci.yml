name: CI

on:
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            py-spatio/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('py-spatio/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Rust testing
      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Build Rust crate
        run: cargo build --verbose

      - name: Run Rust tests
        run: cargo test --verbose

      - name: Run doc tests
        run: cargo test --doc

      # Python testing
      - name: Install Python dependencies
        working-directory: py-spatio
        run: |
          python -m pip install --upgrade pip
          pip install maturin
          pip install -r requirements-dev.txt

      - name: Build and test Python package
        working-directory: py-spatio
        run: |
          maturin build --out dist
          pip install dist/*.whl --force-reinstall --no-deps
          pytest -v

      - name: Run Python linting
        working-directory: py-spatio
        run: |
          ruff check src/ tests/ examples/
          mypy src/
